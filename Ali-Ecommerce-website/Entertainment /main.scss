@import url("https://fonts.googleapis.com/css?family=Arima+Madurai:300");
$primary-color: blue;
body {
  background-color: $primary-color;
}
*::before,
*::after {
  box-sizing: border-box;
}
h1 {
  font-family: "Arima Madurai", cursive;
  color: black;
  font-size: 4rem;
  letter-spacing: -3px;
  text-shadow: 0px 1px 1px rgba(255, 255, 255, 0.6);
  position: relative;
  z-index: 3;
}
.container {
  z-index: 1;
  position: relative;
  overflow: hidden;/*overflow: hidden; is used to control what happens when content overflows its containing element's box. When set to "hidden," it hides any content that overflows the element's box. */
  display: flex;
  align-items: center;
  justify-content: center;
  // min-height: 100vh;
  min-height: 10rem;
  width: 100vw;
  background-image: linear-gradient(
    to bottom,
    rgba(107, 104, 104, 0.6) 0%,
    rgba(112, 108, 104, 0.6) 100%
  );
}
.bird {
  background-image: url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/174479/bird-cells-new.svg);
  background-size: auto 100%;
  width: 88px;
  height: 125px;
  will-change: background-position; /*This CSS property hints to the browser that the specified property (background-position in this case) will be changed dynamically by an animation or transition.*/
  animation-name: fly-cycle; /*This property specifies the name of the keyframe animation that will be applied to the element*/
  animation-timing-function: steps(10);/*steps(10) creates a step-based timing function with 10 steps. This means that the animation will change abruptly from one keyframe to the next in 10 steps, giving a "choppy" appearance.*/
  animation-iteration-count: infinite;
  &--one {
    animation-duration: 1s;
    animation-delay: -0.5s;
  }
  &--two {
    animation-duration: 0.9s;
    animation-delay: -0.75s;
  }
  &--three {
    animation-duration: 1.25s;
    animation-delay: -0.25s;
  }
  &--four {
    animation-duration: 1.1s;
    animation-delay: -0.5s;
  }
}
.bird-container {
  position: absolute;
  top: 20%;
  left: -10%;
  transform: scale(0) translateX(-10vw);
  will-change: transform;
  animation-name: fly-right-one;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  &--one {
    animation-duration: 15s;
    animation-delay: 0;
  }
  &--two {
    animation-duration: 16s;
    animation-delay: 1s;
  }
  &--three {
    animation-duration: 14.6s;
    animation-delay: 9.5s;
  }
  &--four {
    animation-duration: 16s;
    animation-delay: 10.25s;
  }
}
@keyframes fly-cycle {
  100% {
    background-position: -900px 0; /*the background image will be positioned 900 pixels to the left of the left edge of the containing element and aligned with the top edge of the containing element. This can be useful for precise positioning of background images within elements.*/
  }
}
/*Defines the animation keyframes for the bird container's motion, simulating the bird's flight path across the screen from left to right.*/
@keyframes fly-right-one {
  0% {
    transform: scale(0.3) translateX(-10vw);
  }
  10% {
    transform: translateY(2vh) translateX(10vw) scale(0.4); /*translateY(2vh): This part of the transform property translates (moves) the element vertically by 2% of the viewport height (vh). Positive values move the element downwards, and negative values move it upwards.translateX(10vw): This part translates (moves) the element horizontally by 10% of the viewport width (vw). Positive values move the element to the right, and negative values move it to the left.*/
  }
  20% {
    transform: translateY(0vh) translateX(30vw) scale(0.5);
  }
  30% {
    transform: translateY(4vh) translateX(50vw) scale(0.6);
  }
  40% {
    transform: translateY(2vh) translateX(70vw) scale(0.6);
  }
  50% {
    transform: translateY(0vh) translateX(90vw) scale(0.6);
  }
  60% {
    transform: translateY(0vh) translateX(110vw) scale(0.6);
  }
  100% {
    transform: translateY(0vh) translateX(110vw) scale(0.6);
  }
}
